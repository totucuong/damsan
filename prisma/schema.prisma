datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

model User {
    id        String    @id
    email     String    @unique
    firstname String?
    lastname  String?
    messages  Message[]
    File      File[]

    @@map("users")
}

enum MessageType {
    HUMAN
    BOT
}

model Message {
    id        String      @id @default(uuid())
    message   String
    timestamp DateTime
    type      MessageType
    userId    String
    user      User        @relation(fields: [userId], references: [id])
    File      File[]

    @@map("messages")
}

model File {
    id         String  @id @default(uuid())
    url        String
    owner_id   String
    message_id String
    metadata   String @default("")
    content    Json @default("{}")
    type       String @default("")
    owner      User    @relation(fields: [owner_id], references: [id])
    message    Message @relation(fields: [message_id], references: [id])
    chunks     DocumentChunk[]
    @@map("files")
    
}


model Waitlist {
    id        String  @id @default(uuid())
    firstname String?
    lastname  String?
    email     String  @unique

    @@map("waitlist")
}

model DocumentChunk {
    id          String   @id @default(uuid())
    userId      String
    fileId      String
    tokens      Int
    contentHash String   @unique
    embedding   Unsupported("vector")
    createdAt   DateTime @default(now())

    file        File   @relation(fields: [fileId], references: [id])
    @@index([userId, createdAt])
    @@map("document_chunks")
}
